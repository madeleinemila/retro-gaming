$( ".pages.snake" ).ready( function () {
  const game = new Phaser.Game( 640, 480, Phaser.AUTO, 'snake', { preload: preload, create: create, update:update } );

  // Globals
  let snake;
  let food;
  let cursors;
  let wasd;

  // Directional constants
  const UP = 0;
  const DOWN = 1;
  const LEFT = 2;
  const RIGHT = 3;

  // Canvas size
  const CANVAS_WIDTH = 640;
  const CANVAS_HEIGHT = 480;

  // Grid constants
  const BLOCK_SIZE = 16;
  // Grid ranges from 0,0 - 39,29
  const GRID_WIDTH = ( CANVAS_WIDTH / BLOCK_SIZE ) - 1;
  const GRID_HEIGHT = ( CANVAS_HEIGHT / BLOCK_SIZE ) - 1;

  // Snake object
  Snake = function ( game, x, y ) {
    // initialize: function Snake ( game, x, y ) {}
    this.head = Phaser.Sprite.call( this, game, x, y, 'body' );

    this.headPosition = new Phaser.Point( x, y );
    this.body = game.add.group();

    // this.head = this.body.create( x * BLOCK_SIZE, y * BLOCK_SIZE, 'body' );

    this.tail = new Phaser.Point( x, y );

    this.alive = true;

    this.speed = 100;
    this.moveTime = 0;

    this.direction = RIGHT;

    this.move = function() {
      console.log( this.direction );
      switch ( this.direction ) {
        case LEFT:
          this.headPosition.x = Phaser.Math.wrap(   this.headPosition.x - 1, 0, 40 );
        break;
        case RIGHT:
        console.log( 'going right' );
          this.headPosition.x = Phaser.Math.wrap(   this.headPosition.x + 1, 0, 40 );
        break;
        case UP:
          this.headPosition.y = Phaser.Math.wrap(   this.headPosition.y - 1, 0, 30 );
        break;
        case DOWN:
          this.headPosition.y = Phaser.Math.wrap(   this.headPosition.y + 1, 0, 30 );
        break;
      }
      this.body.getChildren()
    }


    cursors = game.input.keyboard.createCursorKeys();
  }

  Snake.prototype = Object.create( Phaser.Sprite.prototype );
  Snake.prototype.constructor = Snake;

  Snake.prototype.update = function () {

  }

  // End Snake object


  function preload () {
    this.load.image( 'food', "<%= asset_path( 'snake/food.png' ) %>")
    this.load.image( 'body', "<%= asset_path( 'snake/body.png' ) %>")
  }

  function create () {
    game.stage.backgroundColor = '#bfcc00';

    snake = new Snake( game, 0, 0 );
    game.add.existing( snake );

    // console.log( snake.headPosition );

  }

  function update () {
    const
  }
} );
